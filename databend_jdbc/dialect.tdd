<?xml version="1.0" encoding="utf-8"?>

<!-- See notes below for definitions that require 2020.3 or newer -->
<dialect name='Databend'
         class='databend_jdbc'
         base='PostgreSQL90Dialect'
         version='18.1'>
  <function-map>
    <function group='operator' name='+' return-type='datetime'>
      <formula>(CAST(%1 AS TIMESTAMP) + %2 * 86400000000)</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>(%1 + INTERVAL (%2) DAY)::DATE</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>(CAST(%1 AS TIMESTAMP) - %2 * 86400000000)</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='date'>
      <formula>(%1 - INTERVAL (%2) DAY)::DATE</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>date_trunc(DAY, CAST(&apos;1900-01-01&apos; AS DATE) + INTERVAL %1 DAY)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>(CAST(&apos;1900-01-01 00:00:00&apos; AS TIMESTAMP) + INTERVAL %1 DAY)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>TRY_CAST(%1 AS TIMESTAMP)</formula>
      <argument type='str' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>(CASE WHEN %1 > 0 THEN LOG10(CAST(%1 AS DOUBLE)) ELSE NULL END)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula><![CDATA[(CASE WHEN %1 > 0 AND %2 > 0 AND %2 <> 1 THEN LN(CAST(%1 AS DOUBLE))/LN(CAST(%2 AS DOUBLE)) ELSE NULL END)]]></formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='TRUNC' return-type='real'>
      <formula>TRUNCATE(%1, 0)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LN' return-type='real'>
      <formula>if(%1 &gt; 0, LN(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>if(%1 &gt; 0, LOG10(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>if(%1 &gt; 0 AND %2 &gt; 0, LN(%1) / LN(%2), NULL)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG2' return-type='real'>
      <formula>if(%1 &gt; 0, LOG2(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='real'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='int'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MIN' return-type='real'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MIN' return-type='int'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='date' name='ISDATE' return-type='bool'>
      <formula>(TRY_CAST(%1 AS TIMESTAMP) IS NOT NULL)</formula>
      <argument type='str' />
    </function>
   <function group='date' name='MAKEDATE' return-type='date'>
      <formula>to_date(LPAD(%1::string, 4, '0') || '-' || LPAD(%2::string, 2, '0') || '-' || LPAD(%3::string, 2, '0'))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
     <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>date_add(second, date_diff('second', date_trunc('day', CAST(%2 AS Nullable(DATETIME))), CAST(%2 AS Nullable(DATETIME))), CAST(%1 AS Nullable(DATE)))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>date_add(second, date_diff('second', date_trunc('day', CAST(%2 AS Nullable(DATETIME))), CAST(%2 AS Nullable(DATETIME))), CAST(%1 AS Nullable(DATE)))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>date_add(second, date_diff('second', date_trunc('day', CAST(%2 AS Nullable(DATETIME))), CAST(%2 AS Nullable(DATETIME))), CAST(%1 AS Nullable(DATE)))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKETIME' return-type='datetime'>
      <formula> to_timestamp(add_seconds(add_minutes(add_hours(DATE '1970-01-02', CAST(%1 AS Nullable(INTEGER))), CAST(%2 AS Nullable(INTEGER))), CAST(%3 AS Nullable(INTEGER))))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>(CASE WHEN %2 &gt;= 0 THEN RIGHT(CAST(%1 AS TEXT), CAST(FLOOR(%2) AS INTEGER)) ELSE NULL END)</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='TRIM' return-type='str'>
      <formula>TRIM(CAST(%1 AS TEXT), &apos; &apos;)</formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='real'>
      <formula>MEDIAN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='datetime'>
      <formula>MEDIAN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='str'>
      <formula>MEDIAN(%1::double)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>QUANTILE_CONT(%2)(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='datetime'>
      <formula>QUANTILE_CONT(%2)(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='str'>
      <formula>QUANTILE_CONT(%2)(%1::double)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='KURTOSIS' return-type='real'>
      <formula>KURTOSIS(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SKEWNESS' return-type='real'>
      <formula>SKEWNESS(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>

    <date-function name='DATEADD' return-type='datetime'>
      <formula>CAST(date_add(%1, %2, %3) AS Nullable(DateTime))</formula>
      <argument type='localstr' />
      <argument type='real' />
      <argument type='datetime' />
    </date-function>

     <date-function name='DATENAME' return-type='str'>
      <formula part='year'>extract(year from %2)</formula>
      <formula part='quarter'>(CAST((((EXTRACT(MONTH FROM %2) - 1) // 3) + 1) AS TEXT))</formula>
      <formula part='month'>extract(month from %2)</formula>
      <formula part='dayofyear'>extract(doy from %2)</formula>
      <formula part='day'>extract(day from %2)</formula>
      <formula part='weekday'>extract(dow from %2)</formula>
      <formula part='week'>CAST(((7 + EXTRACT(DOY FROM %2) - 1 + EXTRACT(DOW FROM DATE_TRUNC(YEAR, %2))) // 7) AS TEXT)</formula>
      <formula part='hour'>extract(hour from %2)</formula>
      <formula part='minute'>extract(minute from %2)</formula>
      <formula part='second'>extract(second from %2)</formula>
      <formula part='iso-quarter'>CAST((LEAST(CAST((EXTRACT(WEEK FROM %2) - 1) AS BIGINT) // 13, 3) + 1) AS TEXT)</formula>
      <formula part='iso-week'>extract(week from %2)</formula>
      <formula part='iso-weekday'>extract(dow from %2)</formula>
      <formula part='iso-year'>extract(isoyear from %2)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='week'>CAST(((7 + EXTRACT(DOY FROM %2) - 1 + (CAST(7 + EXTRACT(DOW FROM DATE_TRUNC(YEAR, %2)) - %3 AS BIGINT) % 7) ) // 7) AS TEXT)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPARSE' return-type='datetime'>
      <formula>STRPTIME(%2, %1)</formula>
      <argument type='localstr' />
      <argument type='str' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>CAST( DATE_TRUNC(%1, CAST(%2 AS TIMESTAMP) ) AS TIMESTAMP)</formula>
      <formula part='quarter'>CAST(DATE_TRUNC(QUARTER, CAST(%2 AS DATE)) AS TIMESTAMP)</formula>
      <formula part='week'>CAST((DATE_TRUNC( DAY, CAST(%2 AS DATE) ) + (-EXTRACT(DOW FROM %2) * INTERVAL &apos;1 DAY&apos;)) AS TIMESTAMP)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula part='week'>CAST(CAST(DATE_TRUNC( DAY, CAST(%2 AS TIMESTAMP)) AS DATE) - (((7 + CAST(EXTRACT(DOW FROM %2) AS BIGINT) - %3) % 7) * INTERVAL 1 DAY) AS TIMESTAMP)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
  </function-map>
  <supported-aggregations>
    <aggregation value='AGG_COUNT'/>
    <aggregation value='AGG_COUNTD'/>
    <aggregation value='AGG_SUM'/>
    <aggregation value='AGG_AVG'/>
    <aggregation value='AGG_MIN'/>
    <aggregation value='AGG_MAX'/>
    <aggregation value='AGG_STDEV'/>
    <aggregation value='AGG_STDEVP'/>
    <aggregation value='AGG_VAR'/>
    <aggregation value='AGG_VARP'/>
    <aggregation value='AGG_COVAR'/>
    <aggregation value='AGG_COVARP'/>
    <aggregation value='AGG_CORR'/>
    <aggregation value='AGG_MEDIAN'/>
    <aggregation value='AGG_PERCENTILE'/>
    <aggregation value='AGG_SKEWNESS'/>
    <aggregation value='AGG_KURTOSIS'/>

    <aggregation value='AGG_YEAR'/>
    <aggregation value='AGG_QTR'/>
    <aggregation value='AGG_MONTH'/>
    <aggregation value='AGG_DAY'/>
    <aggregation value='AGG_WEEK'/>
    <aggregation value='AGG_WEEKDAY'/>
    <aggregation value='AGG_MONTHYEAR'/>
    <aggregation value='AGG_MDY'/>
    <aggregation value='AGG_HOUR'/>
    <aggregation value='AGG_MINUTE'/>
    <aggregation value='AGG_SECOND'/>
    <aggregation value='AGG_ISO_YEAR'/>
    <aggregation value='AGG_ISO_QTR'/>
    <aggregation value='AGG_ISO_WEEK'/>
    <aggregation value='AGG_ISO_WEEKDAY'/>

    <aggregation value='TRUNC_YEAR'/>
    <aggregation value='TRUNC_QTR'/>
    <aggregation value='TRUNC_MONTH'/>
    <aggregation value='TRUNC_DAY'/>
    <aggregation value='TRUNC_WEEK'/>
    <aggregation value='TRUNC_HOUR'/>
    <aggregation value='TRUNC_MINUTE'/>
    <aggregation value='TRUNC_SECOND'/>
    <aggregation value='TRUNC_ISO_YEAR'/>
    <aggregation value='TRUNC_ISO_QTR'/>
    <aggregation value='TRUNC_ISO_WEEK'/>
    <aggregation value='TRUNC_ISO_WEEKDAY'/>
  </supported-aggregations>

  <sql-format>
    <date-literal-escape value='PostgresStyle' />
    <format-select>
      <part name='Into' value='CREATE TEMP TABLE %1 AS' />
      <part name='Select' value='SELECT %1' />
      <part name='From' value='FROM %1' />
      <part name='Where' value='WHERE %1' />
      <part name='Group' value='GROUP BY %1' />
      <part name='Having' value='HAVING %1' />
      <part name='OrderBy' value='ORDER BY %1' />
      <part name='Top' value='LIMIT %1' />
      <part name='TopSamplePercent' value='SAMPLE ROW (%1)' />
      <part name='TopSamplePercent' value='SAMPLE ROW (%1 rows)' />
    </format-select>
  </sql-format>
</dialect>